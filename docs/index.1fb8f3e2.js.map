{"mappings":"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","sources":["<anon>","src/modules/main.js","src/modules/game.js","src/modules/highScore.js","src/modules/highscoreRepository.js"],"sourcesContent":["const $fa0e831873efe7e7$var$url = new URL(\"https://rockpaperscissor-30d3e-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\");\nasync function $fa0e831873efe7e7$export$271e89300b1bef7a() {\n    return await fetch($fa0e831873efe7e7$var$url).then((response)=>response.json()).catch((error)=>console.error(error));\n}\nasync function $fa0e831873efe7e7$export$22a668fc6e1f9263(highScore) {\n    const resp = await fetch($fa0e831873efe7e7$var$url, {\n        method: \"PUT\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(highScore)\n    }).catch((error)=>console.error(error));\n}\nasync function $fa0e831873efe7e7$export$25c1d503e06f4ac1() {\n    const resp = await fetch($fa0e831873efe7e7$var$url, {\n        method: \"DELETE\"\n    }).catch((error)=>console.error(error));\n}\n\n\nclass $94801800f3dc42f3$export$2967c9bf8b530354 {\n    highScore;\n    async initHighScore() {\n        this.highScore = await (0, $fa0e831873efe7e7$export$271e89300b1bef7a)();\n    }\n    async addHighScoreEntry(highScoreEntry) {\n        if (highScoreEntry.score >= this.highScore[this.highScore.length - 1].score) {\n            this.highScore = [\n                ...this.highScore,\n                highScoreEntry\n            ].toSorted((a, b)=>b.score - a.score).splice(0, 5);\n            (0, $fa0e831873efe7e7$export$22a668fc6e1f9263)(this.highScore);\n        }\n    }\n}\nclass $94801800f3dc42f3$var$HighScoreEntry {\n    player;\n    score;\n}\n\n\nconst $efff50eca450a049$var$highScore = new (0, $94801800f3dc42f3$export$2967c9bf8b530354)();\nasync function $efff50eca450a049$export$2e2bcd8739ae039() {\n    const RPS = [\n        \"Rock\",\n        \"Paper\",\n        \"Scissor\"\n    ];\n    //winning combinations\n    const win = [\n        \"RockScissor\",\n        \"PaperRock\",\n        \"ScissorPaper\"\n    ];\n    const playerButtons = document.querySelectorAll(\"#playerButtons > button\");\n    const playerMoveView = document.querySelector(\"#playerMoveView > h1\");\n    const computerMoveView = document.querySelector(\"#computerMoveView> h1\");\n    const playerScoreBoard = document.getElementById(\"playerScore\");\n    const nameButton = document.getElementById(\"nameButton\");\n    const highScoreView = document.getElementById(\"highScore\");\n    await $efff50eca450a049$var$highScore.initHighScore();\n    let playerScore = 0;\n    let playerMove, computerMove;\n    let playerName;\n    highScoreView.innerHTML = $efff50eca450a049$var$highScore.highScore.map((e)=>`<li>${e.name} - ${e.score}</li>`).join(\"\");\n    nameButton.addEventListener(\"click\", (event)=>{\n        event.preventDefault();\n        let name = document.getElementById(\"name\").value;\n        let h1 = document.createElement(\"h1\");\n        h1.innerText = name;\n        playerName = name;\n        let form = document.getElementById(\"nameForm\");\n        form.replaceWith(h1);\n        playerButtons.forEach((e)=>e.removeAttribute(\"disabled\"));\n    });\n    playerButtons.forEach((node)=>node.addEventListener(\"click\", play));\n    async function play(event) {\n        playerMove = event.target.value;\n        computerMove = getRandomRPS();\n        console.log(computerMove);\n        await evalPlay(playerMove, computerMove);\n        updateWindow();\n    }\n    function getRandomRPS() {\n        return RPS[Math.floor(Math.random() * RPS.length)];\n    }\n    function updateWindow() {\n        playerMoveView.innerText = playerMove;\n        computerMoveView.innerText = computerMove;\n        playerScoreBoard.innerText = playerScore;\n    }\n    async function evalPlay(playerMove, computerMove) {\n        if (playerMove === computerMove) {\n            console.log(\"equal moves\");\n            return;\n        }\n        if (win.includes(playerMove + computerMove)) {\n            console.log(\"player score increase\");\n            playerScore++;\n        } else {\n            console.log(\"game over\");\n            await $efff50eca450a049$var$highScore.addHighScoreEntry({\n                name: playerName,\n                score: playerScore\n            });\n            highScoreView.innerHTML = $efff50eca450a049$var$highScore.highScore.map((e)=>`<li>${e.name} - ${e.score}</li>`).join(\"\");\n            alert(\"game over\");\n            reset();\n        }\n    }\n    function reset() {\n        playerScore = 0;\n        playerScoreBoard.innerText = playerScore;\n        playerMoveView.innerText = \"\";\n        computerMoveView.innerText = \"\";\n    }\n}\n\n\n(0, $efff50eca450a049$export$2e2bcd8739ae039)();\n\n\n//# sourceMappingURL=index.1fb8f3e2.js.map\n","import game from \"./game.js\";\r\n\r\n\r\ngame();","import {HighScore} from \"./highScore\";\r\n\r\n\r\nconst highScore = new HighScore();\r\nexport default async function () {\r\n    const RPS = [\"Rock\", \"Paper\", \"Scissor\"];\r\n//winning combinations\r\n    const win = [\"RockScissor\", \"PaperRock\", \"ScissorPaper\"];\r\n\r\n    const playerButtons = document.querySelectorAll(\"#playerButtons > button\");\r\n    const playerMoveView = document.querySelector(\"#playerMoveView > h1\");\r\n    const computerMoveView = document.querySelector(\"#computerMoveView> h1\");\r\n    const playerScoreBoard = document.getElementById(\"playerScore\");\r\n    const nameButton = document.getElementById(\"nameButton\");\r\n    const highScoreView = document.getElementById(\"highScore\");\r\n\r\n    await highScore.initHighScore();\r\n    let playerScore = 0;\r\n    let playerMove, computerMove;\r\n    let playerName\r\n\r\n    highScoreView.innerHTML = highScore.highScore.map(e => `<li>${e.name} - ${e.score}</li>`).join('');\r\n\r\n\r\n\r\n    nameButton.addEventListener(\"click\", event => {\r\n        event.preventDefault();\r\n        let name = document.getElementById(\"name\").value;\r\n        let h1 = document.createElement(\"h1\");\r\n        h1.innerText = name;\r\n        playerName = name;\r\n        let form = document.getElementById(\"nameForm\");\r\n        form.replaceWith(h1);\r\n        playerButtons.forEach(e => e.removeAttribute(\"disabled\"))\r\n    });\r\n\r\n    playerButtons.forEach((node) => node.addEventListener(\"click\", play));\r\n\r\n    async function play(event) {\r\n        playerMove = event.target.value;\r\n        computerMove = getRandomRPS();\r\n        console.log(computerMove)\r\n        await evalPlay(playerMove, computerMove);\r\n        updateWindow();\r\n    }\r\n\r\n    function getRandomRPS() {\r\n        return RPS[Math.floor(Math.random() * RPS.length)];\r\n    }\r\n\r\n    function updateWindow() {\r\n        playerMoveView.innerText = playerMove;\r\n        computerMoveView.innerText = computerMove;\r\n        playerScoreBoard.innerText = playerScore;\r\n    }\r\n\r\n    async function evalPlay(playerMove, computerMove) {\r\n        if (playerMove === computerMove) {\r\n            console.log(\"equal moves\")\r\n            return;\r\n        }\r\n        if (win.includes(playerMove + computerMove)) {\r\n            console.log(\"player score increase\")\r\n            playerScore++;\r\n        } else {\r\n            console.log(\"game over\")\r\n            await highScore.addHighScoreEntry({name: playerName, score: playerScore});\r\n            highScoreView.innerHTML = highScore.highScore.map(e => `<li>${e.name} - ${e.score}</li>`).join('');\r\n            alert(\"game over\")\r\n            reset()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function reset() {\r\n        playerScore = 0;\r\n        playerScoreBoard.innerText = playerScore;\r\n        playerMoveView.innerText = \"\";\r\n        computerMoveView.innerText = \"\";\r\n    }\r\n}","import {getAllHighScore, updateHighScore} from \"./highscoreRepository\";\r\n\r\nexport class HighScore{\r\n    highScore;\r\n\r\n    async initHighScore(){\r\n        this.highScore = await getAllHighScore();\r\n    }\r\n    async addHighScoreEntry(highScoreEntry) {\r\n        if (highScoreEntry.score >= this.highScore[this.highScore.length - 1].score) {\r\n            this.highScore = [...this.highScore, highScoreEntry].toSorted((a, b) => b.score - a.score).splice(0, 5);\r\n            updateHighScore(this.highScore);\r\n        }\r\n\r\n    }\r\n\r\n}\r\nclass HighScoreEntry{\r\n    player;\r\n    score;\r\n\r\n}","const url = new URL(\"https://rockpaperscissor-30d3e-default-rtdb.europe-west1.firebasedatabase.app/highscore.json\")\r\nexport async function getAllHighScore(){\r\n    return await fetch(url)\r\n        .then(response => response.json())\r\n        .catch(error => console.error(error));\r\n}\r\nexport async function updateHighScore(highScore){\r\n    const resp = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers:{\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(highScore)\r\n    }).catch(error => console.error(error));\r\n}\r\n\r\nexport async function deleteAllHighScore(){\r\n    const resp = await fetch(url, {\r\n        method: \"DELETE\",\r\n    }).catch(error => console.error(error));\r\n\r\n}"],"names":["$fa0e831873efe7e7$var$url","URL","$fa0e831873efe7e7$export$271e89300b1bef7a","fetch","then","response","json","catch","error","console","$fa0e831873efe7e7$export$22a668fc6e1f9263","highScore","method","headers","body","JSON","stringify","$efff50eca450a049$var$highScore","initHighScore","addHighScoreEntry","highScoreEntry","score","length","toSorted","a","b","splice","playerMove","computerMove","playerName","RPS","win","playerButtons","document","querySelectorAll","playerMoveView","querySelector","computerMoveView","playerScoreBoard","getElementById","nameButton","highScoreView","playerScore","play","event","target","value","log","Math","floor","random","evalPlay","innerText","includes","name","innerHTML","map","e","join","alert","addEventListener","preventDefault","h1","createElement","form","replaceWith","forEach","removeAttribute","node"],"version":3,"file":"index.1fb8f3e2.js.map"}